{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/thiagomata/Work/github/resume.js/pages/p/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Post = function Post(_ref) {\n  var show = _ref.show;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, show.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, show.summary.replace(/<[/]?[pb]>/g, '')), __jsx(\"img\", {\n    src: show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n};\n\nPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            console.log(\"Fetching show: \".concat(id));\n            _context.next = 4;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            show = _context.sent;\n            console.log(\"Fetched show: \".concat(show.name));\n            return _context.abrupt(\"return\", {\n              show: show\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Post;","map":{"version":3,"sources":["/Users/thiagomata/Work/github/resume.js/pages/p/[id].tsx"],"names":["Layout","fetch","Post","show","name","summary","replace","image","medium","getInitialProps","context","id","query","console","log","res","json"],"mappings":";;;;;AACA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAOA,IAAMC,IAAqB,GAAG,SAAxBA,IAAwB;AAAA,MAAEC,IAAF,QAAEA,IAAF;AAAA,SAC5B,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,OAAL,CAAaC,OAAb,CAAqB,aAArB,EAAoC,EAApC,CAAJ,CAFF,EAGE;AAAK,IAAA,GAAG,EAAEH,IAAI,CAACI,KAAL,CAAWC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAD4B;AAAA,CAA9B;;AAQAN,IAAI,CAACO,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,EADa,GACND,OAAO,CAACE,KADF,CACbD,EADa;AAErBE,YAAAA,OAAO,CAACC,GAAR,0BAA8BH,EAA9B;AAFqB;AAAA,mBAGHV,KAAK,wCAAiCU,EAAjC,EAHF;;AAAA;AAGfI,YAAAA,GAHe;AAAA;AAAA,mBAIFA,GAAG,CAACC,IAAJ,EAJE;;AAAA;AAIfb,YAAAA,IAJe;AAMrBU,YAAAA,OAAO,CAACC,GAAR,yBAA6BX,IAAI,CAACC,IAAlC;AANqB,6CAQd;AAAED,cAAAA,IAAI,EAAJA;AAAF,aARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeD,IAAf","sourcesContent":["import { NextPage } from 'next'\nimport Layout from '../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport { Show } from '../../data/Show'\n\ninterface Props {\n    show: Show\n}\n\nconst Post: NextPage<Props> = ({show}) => (\n  <Layout>\n    <h1>{show.name}</h1>\n    <p>{show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n    <img src={show.image.medium} />\n  </Layout>\n);\n\nPost.getInitialProps = async function(context) {\n  const { id } = context.query;\n  console.log(`Fetching show: ${id}`);\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  console.log(`Fetched show: ${show.name}`);\n\n  return { show };\n};\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}