{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport * as React from \"react\";\n\nvar Page = function Page(_ref) {\n  var userAgent = _ref.userAgent,\n      shows = _ref.shows;\n  return __jsx(Layout, null, __jsx(\"main\", null, \"Your user agent: \", userAgent), __jsx(\"ul\", null, shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(show.id)\n    }, __jsx(\"a\", null, show.name)));\n  })));\n};\n\nPage.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref2) {\n    var req, userAgent, res, data, shows;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req;\n            userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n            _context.next = 4;\n            return fetch('https://api.tvmaze.com/search/shows?q=batman');\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            data = _context.sent;\n            console.log(\"Show data fetched. Count: \".concat(data.length));\n            shows = data.map(function (element) {\n              return {\n                name: \"\" + element.show.name,\n                id: element.show.id,\n                image: {\n                  medium: element.show.image.medium\n                },\n                summary: element.summary\n              };\n            });\n            return _context.abrupt(\"return\", {\n              userAgent: userAgent,\n              shows: shows\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Page;","map":null,"metadata":{},"sourceType":"module"}