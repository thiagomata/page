{"ast":null,"code":"var _jsxFileName = \"/Users/thiagomata/Work/github/resume.js/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\nconst Page = ({\n  userAgent,\n  shows\n}) => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, __jsx(\"main\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Your user agent: \", userAgent), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, show.name))))));\n\nPage.getInitialProps = async ({\n  req\n}) => {\n  const userAgent = req ? req.headers['user-agent'] : navigator.userAgent;\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  let shows = data.map(element => {\n    return {\n      name: \"\" + element.show.name,\n      id: element.show.id,\n      image: {\n        medium: element.show.image.medium\n      },\n      summary: element.summary\n    };\n  });\n  return {\n    userAgent: userAgent,\n    shows: shows\n  };\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/thiagomata/Work/github/resume.js/pages/index.tsx"],"names":["Layout","fetch","Link","Page","userAgent","shows","map","show","id","name","getInitialProps","req","headers","navigator","res","data","json","console","log","length","element","image","medium","summary"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,wBAAnB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAOA,MAAMC,IAAqB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAC1B,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAwBD,SAAxB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKC,KAAK,CAACC,GAAN,CAAUC,IAAI,IACX;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,IAAI,CAACC,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,IAAI,CAACE,IAAT,CADJ,CADJ,CADH,CADL,CAFJ,CADJ;;AAeAN,IAAI,CAACO,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACtC,QAAMP,SAAS,GAAGO,GAAG,GAAGA,GAAG,CAACC,OAAJ,CAAY,YAAZ,CAAH,GAA+BC,SAAS,CAACT,SAA9D;AACA,QAAMU,GAAG,GAAG,MAAMb,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMc,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,EAArD;AAEA,MAAId,KAAY,GAAGU,IAAI,CAACT,GAAL,CACdc,OAAD,IAAuB;AACnB,WAAO;AACHX,MAAAA,IAAI,EAAE,KAAKW,OAAO,CAACb,IAAR,CAAaE,IADrB;AAEHD,MAAAA,EAAE,EAAEY,OAAO,CAACb,IAAR,CAAaC,EAFd;AAGHa,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAEF,OAAO,CAACb,IAAR,CAAac,KAAb,CAAmBC;AADxB,OAHJ;AAMHC,MAAAA,OAAO,EAAEH,OAAO,CAACG;AANd,KAAP;AAQH,GAVc,CAAnB;AAaA,SAAO;AACHnB,IAAAA,SAAS,EAAEA,SADR;AAEHC,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CAxBD;;AA0BA,eAAeF,IAAf","sourcesContent":["import { NextPage } from 'next'\nimport Layout from '../components/MyLayout';\nimport { Show } from '../data/Show'\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\n\ninterface Props {\n    userAgent?: string,\n    shows: Show[],\n}\n\nconst Page: NextPage<Props> = ({ userAgent, shows }) => (\n    <Layout>\n        <main>Your user agent: {userAgent}</main>\n        <ul>\n            {shows.map(show => (\n                <li key={show.id}>\n                    <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\n                        <a>{show.name}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    </Layout>\n)\n\nPage.getInitialProps = async ({ req }) => {\n    const userAgent = req ? req.headers['user-agent'] : navigator.userAgent\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n\n    console.log(`Show data fetched. Count: ${data.length}`);\n\n    let shows:Show[] = data.map(\n        (element:any): Show => {\n            return {\n                name: \"\" + element.show.name,\n                id: element.show.id,\n                image: {\n                    medium: element.show.image.medium,\n                },\n                summary: element.summary\n            }\n        }\n    )\n\n    return {\n        userAgent: userAgent,\n        shows: shows,\n    };\n}\n\nexport default Page"]},"metadata":{},"sourceType":"module"}